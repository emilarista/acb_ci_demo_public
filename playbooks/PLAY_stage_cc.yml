---
- name: Create Config Deployment CC
  hosts: cv_server
  gather_facts: no
  collections:
    - arista.cvp
  tasks:

    - name: "Gather CVP facts {{inventory_hostname}}"
      arista.cvp.cv_facts:
        facts:
          tasks
      register: cv_facts
      tags:
        - cc

    #
    # This playbook assumes that we want to filter the tasks to those with "sw" in their name
    #
    # Finds pending image push tasks for our switches that have "sw" in the name
    - name: "Get filtered tasks from {{inventory_hostname}}"
      ansible.builtin.set_fact:
        task_list: "{{ task_list|default([]) + [ item.workOrderId ] }}"
        device_names: "{{ device_names|default([]) + [ item.workOrderDetails.netElementHostName ]}}"
      when:
        # - item.workOrderDetails.netElementHostName.find("sw") != -1
        - item.data.WORKFLOW_ACTION == "Configlet Push"
        - item.taskStatus == "ACTIVE"
      loop: "{{cv_facts.ansible_facts.tasks}}"
      tags:
        - cc

    - name: "Get device info"
      arista.cvp.cv_facts_v3:
        facts:
          - devices
        regexp_filter: "{{ item.split('.')[0] }}"
      register: device_facts
      loop: "{{ device_names }}"
      tags:
        - cc

    # Constructing CC
    - name: "Add push parent stage"
      ansible.builtin.set_fact:
        stage_register: "{{ stage_register|default([]) + [  {'name':'Config-Change-Workflow','mode':'series'} ] }}"
      tags:
        - cc

    - name: "Creating Config Push Stage"
      ansible.builtin.set_fact:
        stage_register: "{{ stage_register|default([]) + [  {'name':'Config-Push-Stage','mode':'parallel','parent':'Config-Change-Workflow'} ] }}"
      tags:
        - cc

    - name: "Adding config push tasks to register"
      ansible.builtin.set_fact:
        task_register:  "{{ task_register|default([]) + [ { 'task_id': task_list[action_index], 'stage':'Config-Push-Stage'}  ] }}"
      loop: "{{device_names}}"
      loop_control:
        index_var: action_index
      tags:
        - cc

    - name: "Creating Webhook Stage"
      ansible.builtin.set_fact:
        stage_register: "{{ stage_register|default([]) + [  {'name':'Webhook-to-Github','mode':'parallel','parent':'Config-Change-Workflow'} ] }}"
      tags:
        - cc

    - name: "Adding webhook action"
      ansible.builtin.set_fact:
        task_register:  "{{ task_register|default([]) + [ { 'name': webhook_action_id, 'action': webhook_action_id, 'stage':'Webhook-to-Github', 'arguments': [ {'name': 'dummy', 'value': 'dummy'} ] } ] }}"
      tags:
        - cc

    - name: "Finalising change control"
      ansible.builtin.set_fact:
        change: "{{ change | default( {'name': 'Config Update','notes':'generated by ansible-cvp', 'activities': task_register, 'stages': stage_register } ) }}"
      tags:
        - cc

    - name: "Change control ready"
      ansible.builtin.debug:
        var=change
      tags:
        - cc_debug
        - never

    - name: "Creating change control on {{inventory_hostname}}"
      arista.cvp.cv_change_control_v3:
        state: set
        change: "{{change}}"
      register: cv_change
      tags:
        - cc

    - name: "Change created with change id:"
      ansible.builtin.debug:
        msg: "{{ cv_change }}"
      tags:
        - cc_debug
        - never

    - name: "Approve the change control on {{inventory_hostname}}"
      arista.cvp.cv_change_control_v3:
        state: approve
        change_id: ["{{ cv_change.data.id }}"]
      tags:
        - cc
